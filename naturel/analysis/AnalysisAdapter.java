/* This file was generated by SableCC (http://www.sablecc.org/). */

package naturel.analysis;

import java.util.*;
import naturel.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable<Node,Object> in;
    private Hashtable<Node,Object> out;

    public Object getIn(Node node)
    {
        if(this.in == null)
        {
            return null;
        }

        return this.in.get(node);
    }

    public void setIn(Node node, Object o)
    {
        if(this.in == null)
        {
            this.in = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.in.put(node, o);
        }
        else
        {
            this.in.remove(node);
        }
    }

    public Object getOut(Node node)
    {
        if(this.out == null)
        {
            return null;
        }

        return this.out.get(node);
    }

    public void setOut(Node node, Object o)
    {
        if(this.out == null)
        {
            this.out = new Hashtable<Node,Object>(1);
        }

        if(o != null)
        {
            this.out.put(node, o);
        }
        else
        {
            this.out.remove(node);
        }
    }

    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    public void caseANaturel(ANaturel node)
    {
        defaultCase(node);
    }

    public void caseAOneOptionalIdentifier(AOneOptionalIdentifier node)
    {
        defaultCase(node);
    }

    public void caseANoneOptionalIdentifier(ANoneOptionalIdentifier node)
    {
        defaultCase(node);
    }

    public void caseAImport(AImport node)
    {
        defaultCase(node);
    }

    public void caseAClass(AClass node)
    {
        defaultCase(node);
    }

    public void caseAInterfaceInterface(AInterfaceInterface node)
    {
        defaultCase(node);
    }

    public void caseAPublModifier(APublModifier node)
    {
        defaultCase(node);
    }

    public void caseAPrivModifier(APrivModifier node)
    {
        defaultCase(node);
    }

    public void caseAProtModifier(AProtModifier node)
    {
        defaultCase(node);
    }

    public void caseAPublStatModifier(APublStatModifier node)
    {
        defaultCase(node);
    }

    public void caseAPrivStatModifier(APrivStatModifier node)
    {
        defaultCase(node);
    }

    public void caseAProtStatModifier(AProtStatModifier node)
    {
        defaultCase(node);
    }

    public void caseAMethod(AMethod node)
    {
        defaultCase(node);
    }

    public void caseADeclaration(ADeclaration node)
    {
        defaultCase(node);
    }

    public void caseAUnnamedVariable(AUnnamedVariable node)
    {
        defaultCase(node);
    }

    public void caseANamedVariable(ANamedVariable node)
    {
        defaultCase(node);
    }

    public void caseATrueFlag(ATrueFlag node)
    {
        defaultCase(node);
    }

    public void caseAFalseFlag(AFalseFlag node)
    {
        defaultCase(node);
    }

    public void caseATypeType(ATypeType node)
    {
        defaultCase(node);
    }

    public void caseATupleType(ATupleType node)
    {
        defaultCase(node);
    }

    public void caseADefaultType(ADefaultType node)
    {
        defaultCase(node);
    }

    public void caseABlock(ABlock node)
    {
        defaultCase(node);
    }

    public void caseAIfStatement(AIfStatement node)
    {
        defaultCase(node);
    }

    public void caseAWhileStatement(AWhileStatement node)
    {
        defaultCase(node);
    }

    public void caseAAssignmentStatement(AAssignmentStatement node)
    {
        defaultCase(node);
    }

    public void caseADeclarationStatement(ADeclarationStatement node)
    {
        defaultCase(node);
    }

    public void caseAExpStatement(AExpStatement node)
    {
        defaultCase(node);
    }

    public void caseAPlusExp(APlusExp node)
    {
        defaultCase(node);
    }

    public void caseAMinusExp(AMinusExp node)
    {
        defaultCase(node);
    }

    public void caseADivExp(ADivExp node)
    {
        defaultCase(node);
    }

    public void caseAMultExp(AMultExp node)
    {
        defaultCase(node);
    }

    public void caseAModExp(AModExp node)
    {
        defaultCase(node);
    }

    public void caseAAndExp(AAndExp node)
    {
        defaultCase(node);
    }

    public void caseAOrExp(AOrExp node)
    {
        defaultCase(node);
    }

    public void caseAXorExp(AXorExp node)
    {
        defaultCase(node);
    }

    public void caseAEqExp(AEqExp node)
    {
        defaultCase(node);
    }

    public void caseANeqExp(ANeqExp node)
    {
        defaultCase(node);
    }

    public void caseALteqExp(ALteqExp node)
    {
        defaultCase(node);
    }

    public void caseALtExp(ALtExp node)
    {
        defaultCase(node);
    }

    public void caseAGteqExp(AGteqExp node)
    {
        defaultCase(node);
    }

    public void caseAGtExp(AGtExp node)
    {
        defaultCase(node);
    }

    public void caseADotExp(ADotExp node)
    {
        defaultCase(node);
    }

    public void caseANumExp(ANumExp node)
    {
        defaultCase(node);
    }

    public void caseAFnumExp(AFnumExp node)
    {
        defaultCase(node);
    }

    public void caseAStringExp(AStringExp node)
    {
        defaultCase(node);
    }

    public void caseATupleExp(ATupleExp node)
    {
        defaultCase(node);
    }

    public void caseAIdentifierExp(AIdentifierExp node)
    {
        defaultCase(node);
    }

    public void caseAMethodcallExp(AMethodcallExp node)
    {
        defaultCase(node);
    }

    public void caseAListExp(AListExp node)
    {
        defaultCase(node);
    }

    public void caseAMethodcalldefExp(AMethodcalldefExp node)
    {
        defaultCase(node);
    }

    public void caseANoneExp(ANoneExp node)
    {
        defaultCase(node);
    }

    public void caseTComment(TComment node)
    {
        defaultCase(node);
    }

    public void caseTLPar(TLPar node)
    {
        defaultCase(node);
    }

    public void caseTRPar(TRPar node)
    {
        defaultCase(node);
    }

    public void caseTLBracket(TLBracket node)
    {
        defaultCase(node);
    }

    public void caseTRBracket(TRBracket node)
    {
        defaultCase(node);
    }

    public void caseTLBrace(TLBrace node)
    {
        defaultCase(node);
    }

    public void caseTRBrace(TRBrace node)
    {
        defaultCase(node);
    }

    public void caseTPlusPlus(TPlusPlus node)
    {
        defaultCase(node);
    }

    public void caseTMinusMinus(TMinusMinus node)
    {
        defaultCase(node);
    }

    public void caseTHashHash(THashHash node)
    {
        defaultCase(node);
    }

    public void caseTStarEqual(TStarEqual node)
    {
        defaultCase(node);
    }

    public void caseTDivEqual(TDivEqual node)
    {
        defaultCase(node);
    }

    public void caseTModEqual(TModEqual node)
    {
        defaultCase(node);
    }

    public void caseTPlusEqual(TPlusEqual node)
    {
        defaultCase(node);
    }

    public void caseTMinusEqual(TMinusEqual node)
    {
        defaultCase(node);
    }

    public void caseTAmpersandEqual(TAmpersandEqual node)
    {
        defaultCase(node);
    }

    public void caseTBarEqual(TBarEqual node)
    {
        defaultCase(node);
    }

    public void caseTPlus(TPlus node)
    {
        defaultCase(node);
    }

    public void caseTMinus(TMinus node)
    {
        defaultCase(node);
    }

    public void caseTMult(TMult node)
    {
        defaultCase(node);
    }

    public void caseTDiv(TDiv node)
    {
        defaultCase(node);
    }

    public void caseTHash(THash node)
    {
        defaultCase(node);
    }

    public void caseTSemi(TSemi node)
    {
        defaultCase(node);
    }

    public void caseTComma(TComma node)
    {
        defaultCase(node);
    }

    public void caseTAssign(TAssign node)
    {
        defaultCase(node);
    }

    public void caseTColon(TColon node)
    {
        defaultCase(node);
    }

    public void caseTMod(TMod node)
    {
        defaultCase(node);
    }

    public void caseTAmpersand(TAmpersand node)
    {
        defaultCase(node);
    }

    public void caseTQuestMark(TQuestMark node)
    {
        defaultCase(node);
    }

    public void caseTBar(TBar node)
    {
        defaultCase(node);
    }

    public void caseTXor(TXor node)
    {
        defaultCase(node);
    }

    public void caseTDot(TDot node)
    {
        defaultCase(node);
    }

    public void caseTEllipsis(TEllipsis node)
    {
        defaultCase(node);
    }

    public void caseTEq(TEq node)
    {
        defaultCase(node);
    }

    public void caseTNeq(TNeq node)
    {
        defaultCase(node);
    }

    public void caseTLteq(TLteq node)
    {
        defaultCase(node);
    }

    public void caseTLt(TLt node)
    {
        defaultCase(node);
    }

    public void caseTGteq(TGteq node)
    {
        defaultCase(node);
    }

    public void caseTGt(TGt node)
    {
        defaultCase(node);
    }

    public void caseTExclMark(TExclMark node)
    {
        defaultCase(node);
    }

    public void caseTBlank(TBlank node)
    {
        defaultCase(node);
    }

    public void caseTAs(TAs node)
    {
        defaultCase(node);
    }

    public void caseTIf(TIf node)
    {
        defaultCase(node);
    }

    public void caseTElse(TElse node)
    {
        defaultCase(node);
    }

    public void caseTWhile(TWhile node)
    {
        defaultCase(node);
    }

    public void caseTFor(TFor node)
    {
        defaultCase(node);
    }

    public void caseTUse(TUse node)
    {
        defaultCase(node);
    }

    public void caseTString(TString node)
    {
        defaultCase(node);
    }

    public void caseTIdentifier(TIdentifier node)
    {
        defaultCase(node);
    }

    public void caseTFloatSequence(TFloatSequence node)
    {
        defaultCase(node);
    }

    public void caseTDigitSequence(TDigitSequence node)
    {
        defaultCase(node);
    }

    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    public void defaultCase(@SuppressWarnings("unused") Node node)
    {
        // do nothing
    }
}
